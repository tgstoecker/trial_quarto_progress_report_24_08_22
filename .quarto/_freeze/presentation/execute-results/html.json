{
  "hash": "b7826bd588c9b34ae8f1f39892a3ff6f",
  "result": {
    "markdown": "---\n#this is a trick to write custom title slides\n#title: \"A2TEA updates - using Quarto/reveal.js\"\n#author: \"Tyll\"\nformat: \n  revealjs:\n    pdf-separate-fragments: true\n    code-copy: true\n    multiplex: true\n    link-external-newwindow: true\n    footer: \"[A2TEA.Workflow](https://github.com/tgstoecker/A2TEA.Workflow)/[A2TEA.WebApp](https://github.com/tgstoecker/A2TEA.WebApp)\"\n    theme: [\"pp.scss\"]\n    slide-number: c/t\n    incremental: true\n    #title-slide-attributes: \n      #logo: img/a2tea_hexsticker.png\n      #data-background-size: cover\neditor: visual\nexecute: \n  eval: true\n  echo: true\n---\n\n\n<h1>A2TEA updates -</h1>\n\n<h2>using Quarto/reveal.js</h2>\n\n<hr>\n\n<h3>Tyll Stöcker</h3>\n\n![](img/a2tea_hexsticker.png){.relative}\n\n\n\n\n\n## Quarto\n\nQuarto® is an open-source scientific and technical publishing system built on Pandoc\n\n-   Create dynamic content with Python, R, Julia, and Observable.\n-   Author documents as plain text markdown or Jupyter notebooks.\n-   Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\n-   Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\n\n## Standards for publications & modern software\n\n-   Test data\n-   Containerization of snakemake workflows\n-   R tools as packages\n    -   appropriate documentation\n-   CI/CD\n-   Package maintenance\n\n## Documentation\n\n- Building an R package + Writing a manual/introductory guide?\n- devtools, roxygen2 & pkgdown to the rescue\n\n. . .\n\n![](img/roxygen2_logo.png){.absolute top=\"375\" left=\"390\" width=\"150\"}\n![](img/devtools_logo.svg){.absolute top=\"375\" left=\"250\" width=\"150\"} \n![](img/pkgdown_logo.png){.absolute top=\"500\" left=\"325\" width=\"150\"}\n\n- devtools = layout, build & test your package\n- roxygen2 = create documentation\n- pkgdown = transform R package to webpage (host on github pages)\n\n\n## CI/CD\n\n-   \"Continuous Integration/Continuous Delivery\"\n-   facilitated by Github actions\n    -   with every push to origin:\n        -   check if package can be installed\n        -   check if documentation can be build\n        -   ...\n\n## Package maintenance workflow\n\n-   Add features and push to repo\n\n-   Changes are mirrored in documentation/manual\n\n-   Github Actions facilitate CI/CD tests\n\n-   ::: {.fragment .highlight-red}\n    Run containerization script\n    :::\n\n    -   packages A2TEA.WebApp into Docker image\n    -   pushes image to docker hub\n\n-   ::: {.fragment .highlight-red}\n    Run hosting script\n    :::\n\n## Docker/Singularity\n\n-   Easy user experience if WebApp should start from container\n-   Stable & usable latest release if package install should fail\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#pull the image from dockerhub\nsingularity pull a2tea_webapp.sif docker://tgstoecker/a2tea_webapp:latest\n\n#open R console of image in non-persistent but writable mode\nsingularity run --writable --fakeroot a2tea_webapp.sif R\n#or\nsingularity run --writable --no-home a2tea_webapp.sif R\n```\n:::\n\n\n## shinyapps.io\n\n- Hosting solution - no installs, any system, test data included\n  - Making reviewers happy ;D\n- Pricing : ![](img/shinyapps_io_pricing.png)\n- [Let's take a peak - shall we ;D ?](https://tgstoecker.shinyapps.io/A2TEA-WebApp/)\n\n## Final thoughts\n\n-   Quarto and it's capabilities are very intriguing - might sway me away from \"pure\" jupyter notebooks\n-   shinyapps.io is a neat temporary solution - hosting with Rstudio (shiny) server seems a valid option going forward (post-publication)\n-   With software standards & demo capability achieved I can't find any other reason to put off writing... :D\n\n. . .\n\n![](https://c.tenor.com/CrWHpzxIZYEAAAAC/cat-typing-gif.gif){.absolute right=\"300\" width=\"450\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}